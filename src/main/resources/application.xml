<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	xsi:schemaLocation="    
           http://www.springframework.org/schema/beans   
           classpath:/org/springframework/beans/factory/xml/spring-beans-3.0.xsd    
           http://www.springframework.org/schema/aop    
           classpath:/org/springframework/aop/config/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/context    
           classpath:/org/springframework/context/config/spring-context-3.0.xsd">

	<!-- 引入jdbc配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/*.properties</value>
				<!--要是有多个配置文件，只需在这里继续添加即可 -->
			</list>
		</property>
	</bean>

	

	<!-- 配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		不使用properties来配置 <property name="driverClassName" value="com.mysql.jdbc.Driver" 
		/> <property name="url" value="jdbc:mysql://localhost:3306/sample" /> <property 
		name="username" value="root" /> <property name="password" value="123456789" 
		/> </bean> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url"
			value="jdbc:sqlserver://192.168.3.6:1433;database=EosData;integratedSecurity=false" />
		<property name="username" value="sa" />
		<property name="password" value="f040507d" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lin.dao" />
	</bean>

	<!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath*:com/lin/mapper/**/*.xml" />
		<property name="configLocation"
			value="classpath:mybatis/mybatis-config.xml" />
		<!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model" 
			/> -->
	</bean>

	<!-- 自动扫描注解的bean -->
	<context:component-scan
		base-package="com.lin.service" />

</beans>